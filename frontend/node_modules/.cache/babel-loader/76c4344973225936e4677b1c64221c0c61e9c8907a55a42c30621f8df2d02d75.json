{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navad\\\\blood-donor-backend\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [organDonors, setOrganDonors] = useState([]);\n  const [organDonorName, setOrganDonorName] = useState(\"\");\n  const [organDonorCity, setOrganDonorCity] = useState(\"\");\n  const [organDonorContact, setOrganDonorContact] = useState(\"\");\n  const [selectedOrgans, setSelectedOrgans] = useState([]);\n  useEffect(() => {\n    fetchOrganDonors();\n  }, []);\n  const fetchOrganDonors = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/organ-donors\");\n      setOrganDonors(response.data);\n    } catch (error) {\n      console.error(\"Error fetching organ donors:\", error);\n    }\n  };\n  const handleOrganDonorSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:5000/api/organ-donor\", {\n        name: organDonorName,\n        city: organDonorCity,\n        contact: organDonorContact,\n        organs: selectedOrgans\n      });\n      alert(\"‚úÖ Organ donor registered!\");\n      fetchOrganDonors();\n    } catch (error) {\n      console.error(\"Error registering organ donor:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83E\\uDE78 Blood & Organ Donor Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Register as an Organ Donor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleOrganDonorSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Full Name\",\n        value: organDonorName,\n        onChange: e => setOrganDonorName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"City\",\n        value: organDonorCity,\n        onChange: e => setOrganDonorCity(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Contact Number\",\n        value: organDonorContact,\n        onChange: e => setOrganDonorContact(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        onChange: e => setSelectedOrgans(Array.from(e.target.selectedOptions, option => option.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Heart\",\n          children: \"Heart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Lungs\",\n          children: \"Lungs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Kidney\",\n          children: \"Kidney\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Liver\",\n          children: \"Liver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pancreas\",\n          children: \"Pancreas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Available Organ Donors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), organDonors.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No organ donors available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 35\n    }, this) : organDonors.map((donor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCCD \", donor.city, \" | \\uD83D\\uDCDE \", donor.contact, \" | \\uD83D\\uDC64 \", donor.name, \" | \\uD83C\\uDFE5 Organs: \", donor.organs.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"5g2WyVlJk/xdP8oYri7IZa3rFVE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","organDonors","setOrganDonors","organDonorName","setOrganDonorName","organDonorCity","setOrganDonorCity","organDonorContact","setOrganDonorContact","selectedOrgans","setSelectedOrgans","fetchOrganDonors","response","get","data","error","console","handleOrganDonorSubmit","e","preventDefault","post","name","city","contact","organs","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","multiple","Array","from","selectedOptions","option","length","map","donor","index","join","_c","$RefreshReg$"],"sources":["C:/Users/navad/blood-donor-backend/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Dashboard = () => {\r\n  const [organDonors, setOrganDonors] = useState([]);\r\n  const [organDonorName, setOrganDonorName] = useState(\"\");\r\n  const [organDonorCity, setOrganDonorCity] = useState(\"\");\r\n  const [organDonorContact, setOrganDonorContact] = useState(\"\");\r\n  const [selectedOrgans, setSelectedOrgans] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchOrganDonors();\r\n  }, []);\r\n\r\n  const fetchOrganDonors = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/organ-donors\");\r\n      setOrganDonors(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching organ donors:\", error);\r\n    }\r\n  };\r\n\r\n  const handleOrganDonorSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:5000/api/organ-donor\", {\r\n        name: organDonorName,\r\n        city: organDonorCity,\r\n        contact: organDonorContact,\r\n        organs: selectedOrgans,\r\n      });\r\n      alert(\"‚úÖ Organ donor registered!\");\r\n      fetchOrganDonors();\r\n    } catch (error) {\r\n      console.error(\"Error registering organ donor:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>ü©∏ Blood & Organ Donor Dashboard</h2>\r\n\r\n      {/* Organ Donor Registration */}\r\n      <h3>Register as an Organ Donor</h3>\r\n      <form onSubmit={handleOrganDonorSubmit}>\r\n        <input type=\"text\" placeholder=\"Full Name\" value={organDonorName} onChange={(e) => setOrganDonorName(e.target.value)} required />\r\n        <input type=\"text\" placeholder=\"City\" value={organDonorCity} onChange={(e) => setOrganDonorCity(e.target.value)} required />\r\n        <input type=\"text\" placeholder=\"Contact Number\" value={organDonorContact} onChange={(e) => setOrganDonorContact(e.target.value)} required />\r\n        <select multiple onChange={(e) => setSelectedOrgans(Array.from(e.target.selectedOptions, (option) => option.value))}>\r\n          <option value=\"Heart\">Heart</option>\r\n          <option value=\"Lungs\">Lungs</option>\r\n          <option value=\"Kidney\">Kidney</option>\r\n          <option value=\"Liver\">Liver</option>\r\n          <option value=\"Pancreas\">Pancreas</option>\r\n        </select>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n\r\n      {/* Organ Donor List */}\r\n      <h3>Available Organ Donors</h3>\r\n      {organDonors.length === 0 ? <p>No organ donors available.</p> : (\r\n        organDonors.map((donor, index) => (\r\n          <div key={index}>\r\n            <p>üìç {donor.city} | üìû {donor.contact} | üë§ {donor.name} | üè• Organs: {donor.organs.join(\", \")}</p>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}