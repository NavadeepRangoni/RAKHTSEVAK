{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DonorList=()=>{const[donors,setDonors]=useState([]);const[refresh,setRefresh]=useState(false);useEffect(()=>{const fetchDonors=async()=>{try{const response=await axios.get(\"http://localhost:5000/api/donors\",{headers:{\"Cache-Control\":\"no-cache\"}});console.log(\"‚úÖ Fetched Donors:\",response.data);// Adjust API URL if needed\nsetDonors(response.data);}catch(error){console.error(\"Error fetching donors:\",error);}};fetchDonors();},[refresh]);// ‚úÖ Register Plasma Donor Function\nconst registerPlasmaDonor=async donorId=>{try{console.log(\"üîÑ Sending plasma donor update request for ID:\",donorId);const response=await axios.post(\"http://localhost:5000/api/donors/plasma-donors\",{donorId});console.log(\"‚úÖ Plasma donor updated:\",response.data);setRefresh(prev=>!prev);// ‚úÖ Update UI to reflect plasma donor status\nsetDonors(prevDonors=>prevDonors.map(donor=>donor._id===donorId?{...donor,plasmaDonor:true}:donor));}catch(error){console.error(\"‚ùå Error updating plasma donor:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-4\",children:\"\\uD83C\\uDFC5 Donor List\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",children:donors.map(donor=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-5 rounded-xl shadow-lg border border-gray-200 transition-transform transform hover:scale-105 hover:shadow-2xl\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-800\",children:[\"\\uD83D\\uDC64 \",donor.name]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"\\uD83E\\uDE78 Blood Type: \",/*#__PURE__*/_jsx(\"span\",{className:\"font-bold text-red-500\",children:donor.bloodType})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"\\uD83D\\uDCCD City: \",donor.city]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"\\uD83D\\uDCDE Contact: \",donor.contact]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"\\uD83C\\uDFC6 Donations: \",donor.donationCount]}),donor.plasmaDonor?/*#__PURE__*/_jsx(\"span\",{className:\"plasma-badge\",children:\"\\uD83D\\uDD25 Plasma Donor\"}):/*#__PURE__*/_jsx(\"button\",{onClick:()=>registerPlasmaDonor(donor._id),className:\"bg-blue-500 text-white px-3 py-1 rounded mt-2 hover:bg-blue-700\",children:\"Donate Plasma\"}),/*#__PURE__*/_jsx(\"span\",{className:`badge ${getBadgeClass(donor.badge)}`,children:donor.badge})]},donor._id))})]});};// Badge Styles\nconst getBadgeClass=badge=>{switch(badge){case\"Gold Donor\":return\"bg-yellow-500 text-white\";case\"Silver Donor\":return\"bg-gray-400 text-white\";case\"Bronze Donor\":return\"bg-orange-500 text-white\";default:return\"bg-blue-500 text-white\";}};export default DonorList;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","DonorList","donors","setDonors","refresh","setRefresh","fetchDonors","response","get","headers","console","log","data","error","registerPlasmaDonor","donorId","post","prev","prevDonors","map","donor","_id","plasmaDonor","className","children","name","bloodType","city","contact","donationCount","onClick","getBadgeClass","badge"],"sources":["C:/Users/navad/blood-donor-backend/frontend/src/components/DonorList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst DonorList = () => {\r\n  const [donors, setDonors] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchDonors = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/donors\", {\r\n          headers: { \"Cache-Control\": \"no-cache\" },\r\n        });\r\n        console.log(\"‚úÖ Fetched Donors:\", response.data); // Adjust API URL if needed\r\n        setDonors(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching donors:\", error);\r\n      }\r\n    };\r\n\r\n    fetchDonors();\r\n  }, [refresh]);\r\n\r\n  // ‚úÖ Register Plasma Donor Function\r\n  const registerPlasmaDonor = async (donorId) => {\r\n    try {\r\n      console.log(\"üîÑ Sending plasma donor update request for ID:\", donorId);\r\n\r\n      const response = await axios.post(\"http://localhost:5000/api/donors/plasma-donors\", {\r\n        donorId,\r\n      });\r\n\r\n      console.log(\"‚úÖ Plasma donor updated:\", response.data);\r\n      setRefresh((prev) => !prev);\r\n\r\n      // ‚úÖ Update UI to reflect plasma donor status\r\n      setDonors((prevDonors) =>\r\n        prevDonors.map((donor) =>\r\n          donor._id === donorId ? { ...donor, plasmaDonor: true } : donor\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"‚ùå Error updating plasma donor:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">üèÖ Donor List</h2>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {donors.map((donor) => (\r\n          <div\r\n            key={donor._id}\r\n            className=\"bg-white p-5 rounded-xl shadow-lg border border-gray-200 transition-transform transform hover:scale-105 hover:shadow-2xl\"\r\n          >\r\n            <h3 className=\"text-lg font-semibold text-gray-800\">üë§ {donor.name}</h3>\r\n            <p className=\"text-sm text-gray-600\">\r\n              ü©∏ Blood Type: <span className=\"font-bold text-red-500\">{donor.bloodType}</span>\r\n            </p>\r\n            <p className=\"text-sm text-gray-600\">üìç City: {donor.city}</p>\r\n            <p className=\"text-sm text-gray-600\">üìû Contact: {donor.contact}</p>\r\n            <p className=\"text-sm text-gray-600\">üèÜ Donations: {donor.donationCount}</p>\r\n\r\n            {/* ‚úÖ Plasma Donor Badge */}\r\n            {donor.plasmaDonor ? (\r\n              <span className=\"plasma-badge\">üî• Plasma Donor</span>\r\n            ) : (\r\n              <button\r\n                onClick={() => registerPlasmaDonor(donor._id)}\r\n                className=\"bg-blue-500 text-white px-3 py-1 rounded mt-2 hover:bg-blue-700\"\r\n              >\r\n                Donate Plasma\r\n              </button>\r\n            )}\r\n\r\n            {/* Badge Display */}\r\n            <span className={`badge ${getBadgeClass(donor.badge)}`}>\r\n              {donor.badge}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Badge Styles\r\nconst getBadgeClass = (badge) => {\r\n  switch (badge) {\r\n    case \"Gold Donor\":\r\n      return \"bg-yellow-500 text-white\";\r\n    case \"Silver Donor\":\r\n      return \"bg-gray-400 text-white\";\r\n    case \"Bronze Donor\":\r\n      return \"bg-orange-500 text-white\";\r\n    default:\r\n      return \"bg-blue-500 text-white\";\r\n  }\r\n};\r\n\r\nexport default DonorList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}