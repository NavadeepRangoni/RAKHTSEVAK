{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navad\\\\blood-donor-backend\\\\frontend\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { registerUser } from \"../services/api\"; // Ensure this function exists in api.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    bloodType: \"\",\n    location: \"\",\n    contact: \"\"\n  });\n  const handleChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Collected Form Data:\", formData); // ✅ Check what is being sent\n\n    try {\n      // Ensure field names match the backend expectations\n      const updatedUserData = {\n        name: formData.name,\n        email: formData.email,\n        password: formData.password,\n        bloodType: formData.bloodType,\n        // Ensure backend expects 'bloodType' and not 'blood_group'\n        city: formData.location,\n        // If backend expects 'city' instead of 'location'\n        contact: formData.contact\n      };\n      const response = await registerUser(updatedUserData);\n      alert(\"✅ Registration successful!\");\n      console.log(\"Server Response:\", response.data);\n    } catch (error) {\n      var _error$response;\n      console.error(\"❌ Registration failed:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert(\"⚠️ Error registering user!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"name\",\n      placeholder: \"Name\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"bloodType\",\n      placeholder: \"Blood Type\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"location\",\n      placeholder: \"Location\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"contact\",\n      placeholder: \"Contact\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"TI+JMDIlpwi/hRL4dre+tB//lRA=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","registerUser","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","name","email","password","bloodType","location","contact","handleChange","e","target","value","handleSubmit","preventDefault","console","log","updatedUserData","city","response","alert","data","error","_error$response","message","onSubmit","children","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/navad/blood-donor-backend/frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { registerUser } from \"../services/api\"; // Ensure this function exists in api.js\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    bloodType: \"\",\r\n    location: \"\",\r\n    contact: \"\"\r\n  });\r\n\r\n  const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Collected Form Data:\", formData); // ✅ Check what is being sent\r\n\r\n    try {\r\n      // Ensure field names match the backend expectations\r\n      const updatedUserData = {\r\n        name: formData.name,\r\n        email: formData.email,\r\n        password: formData.password,\r\n        bloodType: formData.bloodType, // Ensure backend expects 'bloodType' and not 'blood_group'\r\n        city: formData.location, // If backend expects 'city' instead of 'location'\r\n        contact: formData.contact\r\n      };\r\n\r\n      const response = await registerUser(updatedUserData);\r\n      alert(\"✅ Registration successful!\");\r\n\r\n      console.log(\"Server Response:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"❌ Registration failed:\", error.response?.data || error.message);\r\n      alert(\"⚠️ Error registering user!\");\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input name=\"name\" placeholder=\"Name\" onChange={handleChange} required />\r\n      <input name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\r\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} required />\r\n      <input name=\"bloodType\" placeholder=\"Blood Type\" onChange={handleChange} required />\r\n      <input name=\"location\" placeholder=\"Location\" onChange={handleChange} required />\r\n      <input name=\"contact\" placeholder=\"Contact\" onChange={handleChange} required />\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}