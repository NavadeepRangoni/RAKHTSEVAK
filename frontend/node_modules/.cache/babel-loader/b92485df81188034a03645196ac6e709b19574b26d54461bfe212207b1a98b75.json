{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import DonorList from\"../components/DonorList\";import Chatbot from\"../components/Chatbot\";import\"./Dashboard.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[donors,setDonors]=useState([]);const[searchCity,setSearchCity]=useState(\"\");const[searchBloodType,setSearchBloodType]=useState(\"All\");const[searchPlasma,setSearchPlasma]=useState(false);// Toggle between Blood and Plasma donors\nconst[currentPage,setCurrentPage]=useState(0);const[chatOpen,setChatOpen]=useState(false);const[donorAvailability,setDonorAvailability]=useState({});const[newDonor,setNewDonor]=useState({name:\"\",bloodType:\"\",city:\"\",contact:\"\",plasmaDonor:false});useEffect(()=>{fetchDonors();},[]);const fetchDonors=async()=>{try{const response=await axios.get(`${import.meta.env.VITE_REACT_APP_BACKEND_BASEURL}/api/donors`);setDonors(response.data);const availabilityData={};response.data.forEach(donor=>{availabilityData[donor._id]=donor.available;});setDonorAvailability(availabilityData);}catch(error){console.error(\"❌ Error fetching donors:\",error);}};const handleRegisterDonor=async e=>{e.preventDefault();try{const response=await axios.post(`${import.meta.env.VITE_REACT_APP_BACKEND_BASEURL}/api/donors`,newDonor);setDonors([...donors,response.data]);setNewDonor({name:\"\",bloodType:\"\",city:\"\",contact:\"\",plasmaDonor:false});}catch(error){console.error(\"❌ Error registering donor:\",error);}};const handleDonateClick=async donorId=>{const donationDate=new Date().toISOString();try{const response=await axios.put(`${import.meta.env.VITE_REACT_APP_BACKEND_BASEURL}/api/donors/${donorId}/donate`,{donationDate});setDonors(prevDonors=>prevDonors.map(donor=>donor._id===donorId?response.data:donor));}catch(error){console.error(\"❌ Error updating donation status:\",error);}};const handleToggleAvailability=async donorId=>{const updatedAvailability=!donorAvailability[donorId];setDonorAvailability(prev=>({...prev,[donorId]:updatedAvailability}));try{await axios.put(`${import.meta.env.VITE_REACT_APP_BACKEND_BASEURL}/api/donors/${donorId}/availability`,{available:updatedAvailability});}catch(error){console.error(\"❌ Error updating availability:\",error);}};const isDonationLocked=donationDate=>{if(!donationDate)return false;const donationTime=new Date(donationDate).getTime();const currentTime=new Date().getTime();const diffInDays=(currentTime-donationTime)/(1000*60*60*24);return diffInDays<90;};const bloodGroupOptions=[\"All\",\"A+\",\"A-\",\"B+\",\"B-\",\"AB+\",\"AB-\",\"O+\",\"O-\"];const plasmaGroupOptions=[\"A+\",\"B+\",\"AB+\",\"O+\"];// Only these are allowed for plasma donations\nconst filteredDonors=donors.filter(donor=>{const matchesCity=!searchCity||donor.city&&donor.city.toLowerCase().includes(searchCity.toLowerCase());if(searchPlasma){return matchesCity&&plasmaGroupOptions.includes(donor.bloodType);}else{return matchesCity&&(searchBloodType===\"All\"||donor.bloodType===searchBloodType);}});return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-switch\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(0),className:currentPage===0?\"active\":\"\",children:\"Become a Donor\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(1),className:currentPage===1?\"active\":\"\",children:\"Find a Donor\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pages\",style:{transform:`translateX(-${currentPage*100}%)`},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83E\\uDE78 Become a Blood Donor \\u2764\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"donor-section\",children:[/*#__PURE__*/_jsxs(\"form\",{className:\"donor-form\",onSubmit:handleRegisterDonor,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Full Name\",value:newDonor.name,onChange:e=>setNewDonor({...newDonor,name:e.target.value}),required:true}),/*#__PURE__*/_jsxs(\"select\",{value:newDonor.bloodType,onChange:e=>setNewDonor({...newDonor,bloodType:e.target.value}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Blood Type\"}),bloodGroupOptions.slice(1).map(group=>/*#__PURE__*/_jsx(\"option\",{value:group,children:group},group))]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"City\",value:newDonor.city,onChange:e=>setNewDonor({...newDonor,city:e.target.value}),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Contact Number\",value:newDonor.contact,onChange:e=>setNewDonor({...newDonor,contact:e.target.value}),required:true}),/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"plasmaDonor\",checked:newDonor.plasmaDonor,onChange:e=>setNewDonor({...newDonor,plasmaDonor:e.target.checked})}),\"\\uD83E\\uDDEC Register as Plasma Donor\"]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Register as Donor\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"plasma-poster\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\" Plasma Donation Matching Rules\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Donor Blood Group\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Can Donate Plasma To\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"O (O+, O\\u2212)\"}),/*#__PURE__*/_jsx(\"td\",{className:\"universal-donor\",children:\"ALL blood groups (Universal Plasma Donor)\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"A (A+, A\\u2212)\"}),/*#__PURE__*/_jsx(\"td\",{children:\"A, AB\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"B (B+, B\\u2212)\"}),/*#__PURE__*/_jsx(\"td\",{children:\"B, AB\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"AB (AB+, AB\\u2212)\"}),/*#__PURE__*/_jsx(\"td\",{className:\"universal-recipient\",children:\"AB only (Universal Plasma Recipient)\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-section\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"chat-toggle-btn\",onClick:()=>setChatOpen(!chatOpen),children:chatOpen?\"Close Chat\":\"Open Chat\"}),chatOpen&&/*#__PURE__*/_jsx(Chatbot,{})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDD0D Find a Blood Donor\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter City\",onChange:e=>setSearchCity(e.target.value)}),/*#__PURE__*/_jsx(\"select\",{onChange:e=>setSearchBloodType(e.target.value),children:bloodGroupOptions.map(group=>/*#__PURE__*/_jsx(\"option\",{value:group,children:group},group))}),/*#__PURE__*/_jsx(\"div\",{className:\"donor-list\",children:filteredDonors.map(donor=>/*#__PURE__*/_jsxs(\"div\",{className:\"donor-card\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDCCD \",donor.city,\" | \\uD83E\\uDE78 \",donor.bloodType,\" | \\uD83D\\uDCDE \",donor.contact,\" | \\uD83D\\uDC64 \",donor.name,\" \",donor.plasmaDonor&&\"🧬\"]}),/*#__PURE__*/_jsx(\"button\",{className:`availability-btn ${donorAvailability[donor._id]?\"available\":\"unavailable\"}`,onClick:()=>handleToggleAvailability(donor._id),children:donorAvailability[donor._id]?\"Available\":\"Unavailable\"}),/*#__PURE__*/_jsx(\"button\",{className:\"donate-btn \"+(donor.donated?\"donated\":\"\"),onClick:()=>handleDonateClick(donor._id),disabled:donor.donated,children:donor.donated?\"Donated\":\"Donate Now\"})]},donor._id))})]})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","DonorList","Chatbot","jsx","_jsx","jsxs","_jsxs","Dashboard","donors","setDonors","searchCity","setSearchCity","searchBloodType","setSearchBloodType","searchPlasma","setSearchPlasma","currentPage","setCurrentPage","chatOpen","setChatOpen","donorAvailability","setDonorAvailability","newDonor","setNewDonor","name","bloodType","city","contact","plasmaDonor","fetchDonors","response","get","import","meta","env","VITE_REACT_APP_BACKEND_BASEURL","data","availabilityData","forEach","donor","_id","available","error","console","handleRegisterDonor","e","preventDefault","post","handleDonateClick","donorId","donationDate","Date","toISOString","put","prevDonors","map","handleToggleAvailability","updatedAvailability","prev","isDonationLocked","donationTime","getTime","currentTime","diffInDays","bloodGroupOptions","plasmaGroupOptions","filteredDonors","filter","matchesCity","toLowerCase","includes","className","children","onClick","style","transform","onSubmit","type","placeholder","value","onChange","target","required","slice","group","checked","donated","disabled"],"sources":["C:/Users/navad/Documents/GitHub/RAKHTSEVAK/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport DonorList from \"../components/DonorList\";\r\nimport Chatbot from \"../components/Chatbot\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const [donors, setDonors] = useState([]);\r\n  const [searchCity, setSearchCity] = useState(\"\");\r\n  const [searchBloodType, setSearchBloodType] = useState(\"All\");\r\n  const [searchPlasma, setSearchPlasma] = useState(false); // Toggle between Blood and Plasma donors\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [chatOpen, setChatOpen] = useState(false);\r\n  const [donorAvailability, setDonorAvailability] = useState({});\r\n  const [newDonor, setNewDonor] = useState({\r\n    name: \"\",\r\n    bloodType: \"\",\r\n    city: \"\",\r\n    contact: \"\",\r\n    plasmaDonor: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchDonors();\r\n  }, []);\r\n\r\n  const fetchDonors = async () => {\r\n    try {\r\n      const response = await axios.get(`${import.meta.env.VITE_REACT_APP_BACKEND_BASEURL}/api/donors`);\r\n      setDonors(response.data);\r\n\r\n      const availabilityData = {};\r\n      response.data.forEach((donor) => {\r\n        availabilityData[donor._id] = donor.available;\r\n      });\r\n      setDonorAvailability(availabilityData);\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching donors:\", error);\r\n    }\r\n  };\r\n\r\n  const handleRegisterDonor = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(`${import.meta.env.VITE_REACT_APP_BACKEND_BASEURL}/api/donors`, newDonor);\r\n      setDonors([...donors, response.data]); \r\n      setNewDonor({ name: \"\", bloodType: \"\", city: \"\", contact: \"\",plasmaDonor: false });\r\n    } catch (error) {\r\n      console.error(\"❌ Error registering donor:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDonateClick = async (donorId) => {\r\n    const donationDate = new Date().toISOString();\r\n\r\n    try {\r\n      const response = await axios.put(`${import.meta.env.VITE_REACT_APP_BACKEND_BASEURL}/api/donors/${donorId}/donate`, {\r\n        donationDate,\r\n      });\r\n\r\n      setDonors((prevDonors) =>\r\n        prevDonors.map((donor) =>\r\n          donor._id === donorId ? response.data : donor\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"❌ Error updating donation status:\", error);\r\n    }\r\n  };\r\n\r\n  const handleToggleAvailability = async (donorId) => {\r\n    const updatedAvailability = !donorAvailability[donorId];\r\n\r\n    setDonorAvailability((prev) => ({\r\n      ...prev,\r\n      [donorId]: updatedAvailability,\r\n    }));\r\n\r\n    try {\r\n      await axios.put(`${import.meta.env.VITE_REACT_APP_BACKEND_BASEURL}/api/donors/${donorId}/availability`, {\r\n        available: updatedAvailability,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"❌ Error updating availability:\", error);\r\n    }\r\n  };\r\n\r\n  const isDonationLocked = (donationDate) => {\r\n    if (!donationDate) return false;\r\n    const donationTime = new Date(donationDate).getTime();\r\n    const currentTime = new Date().getTime();\r\n    const diffInDays = (currentTime - donationTime) / (1000 * 60 * 60 * 24);\r\n    return diffInDays < 90;\r\n  };\r\n\r\n  const bloodGroupOptions = [\"All\", \"A+\", \"A-\", \"B+\", \"B-\", \"AB+\", \"AB-\", \"O+\", \"O-\"];\r\n  const plasmaGroupOptions = [\"A+\", \"B+\", \"AB+\", \"O+\"]; // Only these are allowed for plasma donations\r\n\r\n  const filteredDonors = donors.filter((donor) => {\r\n    const matchesCity = !searchCity || (donor.city && donor.city.toLowerCase().includes(searchCity.toLowerCase()));\r\n\r\n    if (searchPlasma) {\r\n      return matchesCity && plasmaGroupOptions.includes(donor.bloodType);\r\n    } else {\r\n      return matchesCity && (searchBloodType === \"All\" || donor.bloodType === searchBloodType);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"page-switch\">\r\n        <button onClick={() => setCurrentPage(0)} className={currentPage === 0 ? \"active\" : \"\"}>\r\n          Become a Donor\r\n        </button>\r\n        <button onClick={() => setCurrentPage(1)} className={currentPage === 1 ? \"active\" : \"\"}>\r\n          Find a Donor\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"pages\" style={{ transform: `translateX(-${currentPage * 100}%)` }}>\r\n        {/* Page 1 - Become a Donor */}\r\n        <div className=\"page\">\r\n          <h2>🩸 Become a Blood Donor ❤️</h2>\r\n\r\n          <div className=\"donor-section\">\r\n            <form className=\"donor-form\" onSubmit={handleRegisterDonor}>\r\n              <input type=\"text\" placeholder=\"Full Name\" value={newDonor.name} onChange={(e) => setNewDonor({ ...newDonor, name: e.target.value })} required />\r\n              <select value={newDonor.bloodType} onChange={(e) => setNewDonor({ ...newDonor, bloodType: e.target.value })} required>\r\n                <option value=\"\">Select Blood Type</option>\r\n                {bloodGroupOptions.slice(1).map((group) => (\r\n                  <option key={group} value={group}>{group}</option>\r\n                ))}\r\n              </select>\r\n              <input type=\"text\" placeholder=\"City\" value={newDonor.city} onChange={(e) => setNewDonor({ ...newDonor, city: e.target.value })} required />\r\n              <input type=\"text\" placeholder=\"Contact Number\" value={newDonor.contact} onChange={(e) => setNewDonor({ ...newDonor, contact: e.target.value })} required />\r\n              <label className=\"checkbox-container\">\r\n                <input type=\"checkbox\" name=\"plasmaDonor\" checked={newDonor.plasmaDonor} onChange={(e) => setNewDonor({ ...newDonor, plasmaDonor: e.target.checked })} />\r\n                🧬 Register as Plasma Donor\r\n              </label>\r\n              <button type=\"submit\">Register as Donor</button>\r\n            </form>\r\n            <div className=\"plasma-poster\">\r\n            <h3> Plasma Donation Matching Rules</h3>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Donor Blood Group</th>\r\n                  <th>Can Donate Plasma To</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>O (O+, O−)</td>\r\n                  <td className=\"universal-donor\">ALL blood groups (Universal Plasma Donor)</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>A (A+, A−)</td>\r\n                  <td>A, AB</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>B (B+, B−)</td>\r\n                  <td>B, AB</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>AB (AB+, AB−)</td>\r\n                  <td className=\"universal-recipient\">AB only (Universal Plasma Recipient)</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n            <div className=\"chat-section\">\r\n              <button className=\"chat-toggle-btn\" onClick={() => setChatOpen(!chatOpen)}>\r\n                {chatOpen ? \"Close Chat\" : \"Open Chat\"}\r\n              </button>\r\n              {chatOpen && <Chatbot />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Page 2 - Find a Donor */}\r\n        <div className=\"page\">\r\n          <h3>🔍 Find a Blood Donor</h3>\r\n          <input type=\"text\" placeholder=\"Enter City\" onChange={(e) => setSearchCity(e.target.value)} />\r\n          <select onChange={(e) => setSearchBloodType(e.target.value)}>\r\n            {bloodGroupOptions.map((group) => (\r\n              <option key={group} value={group}>{group}</option>\r\n            ))}\r\n          </select>\r\n\r\n          <div className=\"donor-list\">\r\n            {filteredDonors.map((donor) => (\r\n              <div className=\"donor-card\" key={donor._id}>\r\n                <p>📍 {donor.city} | 🩸 {donor.bloodType} | 📞 {donor.contact} | 👤 {donor.name} {donor.plasmaDonor && \"🧬\"}</p>\r\n\r\n                <button className={`availability-btn ${donorAvailability[donor._id] ? \"available\" : \"unavailable\"}`} onClick={() => handleToggleAvailability(donor._id)}>\r\n                  {donorAvailability[donor._id] ? \"Available\" : \"Unavailable\"}\r\n                </button>\r\n\r\n                <button className={\"donate-btn \" + (donor.donated ? \"donated\" : \"\")} onClick={() => handleDonateClick(donor._id)} disabled={donor.donated}>\r\n                  {donor.donated ? \"Donated\" : \"Donate Now\"}\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,OAAO,KAAM,uBAAuB,CAC3C,MAAO,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzB,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACc,eAAe,CAAEC,kBAAkB,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACgB,YAAY,CAAEC,eAAe,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAE;AACzD,KAAM,CAACkB,WAAW,CAAEC,cAAc,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACoB,QAAQ,CAAEC,WAAW,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACsB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9D,KAAM,CAACwB,QAAQ,CAAEC,WAAW,CAAC,CAAGzB,QAAQ,CAAC,CACvC0B,IAAI,CAAE,EAAE,CACRC,SAAS,CAAE,EAAE,CACbC,IAAI,CAAE,EAAE,CACRC,OAAO,CAAE,EAAE,CACXC,WAAW,CAAE,KACf,CAAC,CAAC,CAEF7B,SAAS,CAAC,IAAM,CACd8B,WAAW,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA9B,KAAK,CAAC+B,GAAG,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,8BAA8B,aAAa,CAAC,CAChG1B,SAAS,CAACqB,QAAQ,CAACM,IAAI,CAAC,CAExB,KAAM,CAAAC,gBAAgB,CAAG,CAAC,CAAC,CAC3BP,QAAQ,CAACM,IAAI,CAACE,OAAO,CAAEC,KAAK,EAAK,CAC/BF,gBAAgB,CAACE,KAAK,CAACC,GAAG,CAAC,CAAGD,KAAK,CAACE,SAAS,CAC/C,CAAC,CAAC,CACFpB,oBAAoB,CAACgB,gBAAgB,CAAC,CACxC,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CACF,CAAC,CAED,KAAM,CAAAE,mBAAmB,CAAG,KAAO,CAAAC,CAAC,EAAK,CACvCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAA9B,KAAK,CAAC+C,IAAI,CAAC,GAAGf,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,8BAA8B,aAAa,CAAEb,QAAQ,CAAC,CAC3Gb,SAAS,CAAC,CAAC,GAAGD,MAAM,CAAEsB,QAAQ,CAACM,IAAI,CAAC,CAAC,CACrCb,WAAW,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,SAAS,CAAE,EAAE,CAAEC,IAAI,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAE,CAACC,WAAW,CAAE,KAAM,CAAC,CAAC,CACpF,CAAE,MAAOc,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACpD,CACF,CAAC,CAED,KAAM,CAAAM,iBAAiB,CAAG,KAAO,CAAAC,OAAO,EAAK,CAC3C,KAAM,CAAAC,YAAY,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAE7C,GAAI,CACF,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAA9B,KAAK,CAACqD,GAAG,CAAC,GAAGrB,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,8BAA8B,eAAec,OAAO,SAAS,CAAE,CACjHC,YACF,CAAC,CAAC,CAEFzC,SAAS,CAAE6C,UAAU,EACnBA,UAAU,CAACC,GAAG,CAAEhB,KAAK,EACnBA,KAAK,CAACC,GAAG,GAAKS,OAAO,CAAGnB,QAAQ,CAACM,IAAI,CAAGG,KAC1C,CACF,CAAC,CACH,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CAC3D,CACF,CAAC,CAED,KAAM,CAAAc,wBAAwB,CAAG,KAAO,CAAAP,OAAO,EAAK,CAClD,KAAM,CAAAQ,mBAAmB,CAAG,CAACrC,iBAAiB,CAAC6B,OAAO,CAAC,CAEvD5B,oBAAoB,CAAEqC,IAAI,GAAM,CAC9B,GAAGA,IAAI,CACP,CAACT,OAAO,EAAGQ,mBACb,CAAC,CAAC,CAAC,CAEH,GAAI,CACF,KAAM,CAAAzD,KAAK,CAACqD,GAAG,CAAC,GAAGrB,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,8BAA8B,eAAec,OAAO,eAAe,CAAE,CACtGR,SAAS,CAAEgB,mBACb,CAAC,CAAC,CACJ,CAAE,MAAOf,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACxD,CACF,CAAC,CAED,KAAM,CAAAiB,gBAAgB,CAAIT,YAAY,EAAK,CACzC,GAAI,CAACA,YAAY,CAAE,MAAO,MAAK,CAC/B,KAAM,CAAAU,YAAY,CAAG,GAAI,CAAAT,IAAI,CAACD,YAAY,CAAC,CAACW,OAAO,CAAC,CAAC,CACrD,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAX,IAAI,CAAC,CAAC,CAACU,OAAO,CAAC,CAAC,CACxC,KAAM,CAAAE,UAAU,CAAG,CAACD,WAAW,CAAGF,YAAY,GAAK,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAC,CACvE,MAAO,CAAAG,UAAU,CAAG,EAAE,CACxB,CAAC,CAED,KAAM,CAAAC,iBAAiB,CAAG,CAAC,KAAK,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,KAAK,CAAE,KAAK,CAAE,IAAI,CAAE,IAAI,CAAC,CACnF,KAAM,CAAAC,kBAAkB,CAAG,CAAC,IAAI,CAAE,IAAI,CAAE,KAAK,CAAE,IAAI,CAAC,CAAE;AAEtD,KAAM,CAAAC,cAAc,CAAG1D,MAAM,CAAC2D,MAAM,CAAE5B,KAAK,EAAK,CAC9C,KAAM,CAAA6B,WAAW,CAAG,CAAC1D,UAAU,EAAK6B,KAAK,CAACb,IAAI,EAAIa,KAAK,CAACb,IAAI,CAAC2C,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC5D,UAAU,CAAC2D,WAAW,CAAC,CAAC,CAAE,CAE9G,GAAIvD,YAAY,CAAE,CAChB,MAAO,CAAAsD,WAAW,EAAIH,kBAAkB,CAACK,QAAQ,CAAC/B,KAAK,CAACd,SAAS,CAAC,CACpE,CAAC,IAAM,CACL,MAAO,CAAA2C,WAAW,GAAKxD,eAAe,GAAK,KAAK,EAAI2B,KAAK,CAACd,SAAS,GAAKb,eAAe,CAAC,CAC1F,CACF,CAAC,CAAC,CAEF,mBACEN,KAAA,QAAKiE,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClClE,KAAA,QAAKiE,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BpE,IAAA,WAAQqE,OAAO,CAAEA,CAAA,GAAMxD,cAAc,CAAC,CAAC,CAAE,CAACsD,SAAS,CAAEvD,WAAW,GAAK,CAAC,CAAG,QAAQ,CAAG,EAAG,CAAAwD,QAAA,CAAC,gBAExF,CAAQ,CAAC,cACTpE,IAAA,WAAQqE,OAAO,CAAEA,CAAA,GAAMxD,cAAc,CAAC,CAAC,CAAE,CAACsD,SAAS,CAAEvD,WAAW,GAAK,CAAC,CAAG,QAAQ,CAAG,EAAG,CAAAwD,QAAA,CAAC,cAExF,CAAQ,CAAC,EACN,CAAC,cAENlE,KAAA,QAAKiE,SAAS,CAAC,OAAO,CAACG,KAAK,CAAE,CAAEC,SAAS,CAAE,eAAe3D,WAAW,CAAG,GAAG,IAAK,CAAE,CAAAwD,QAAA,eAEhFlE,KAAA,QAAKiE,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBpE,IAAA,OAAAoE,QAAA,CAAI,gDAA0B,CAAI,CAAC,cAEnClE,KAAA,QAAKiE,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BlE,KAAA,SAAMiE,SAAS,CAAC,YAAY,CAACK,QAAQ,CAAEhC,mBAAoB,CAAA4B,QAAA,eACzDpE,IAAA,UAAOyE,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,WAAW,CAACC,KAAK,CAAEzD,QAAQ,CAACE,IAAK,CAACwD,QAAQ,CAAGnC,CAAC,EAAKtB,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEE,IAAI,CAAEqB,CAAC,CAACoC,MAAM,CAACF,KAAM,CAAC,CAAE,CAACG,QAAQ,MAAE,CAAC,cACjJ5E,KAAA,WAAQyE,KAAK,CAAEzD,QAAQ,CAACG,SAAU,CAACuD,QAAQ,CAAGnC,CAAC,EAAKtB,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEG,SAAS,CAAEoB,CAAC,CAACoC,MAAM,CAACF,KAAM,CAAC,CAAE,CAACG,QAAQ,MAAAV,QAAA,eACnHpE,IAAA,WAAQ2E,KAAK,CAAC,EAAE,CAAAP,QAAA,CAAC,mBAAiB,CAAQ,CAAC,CAC1CR,iBAAiB,CAACmB,KAAK,CAAC,CAAC,CAAC,CAAC5B,GAAG,CAAE6B,KAAK,eACpChF,IAAA,WAAoB2E,KAAK,CAAEK,KAAM,CAAAZ,QAAA,CAAEY,KAAK,EAA3BA,KAAoC,CAClD,CAAC,EACI,CAAC,cACThF,IAAA,UAAOyE,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,MAAM,CAACC,KAAK,CAAEzD,QAAQ,CAACI,IAAK,CAACsD,QAAQ,CAAGnC,CAAC,EAAKtB,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEI,IAAI,CAAEmB,CAAC,CAACoC,MAAM,CAACF,KAAM,CAAC,CAAE,CAACG,QAAQ,MAAE,CAAC,cAC5I9E,IAAA,UAAOyE,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,gBAAgB,CAACC,KAAK,CAAEzD,QAAQ,CAACK,OAAQ,CAACqD,QAAQ,CAAGnC,CAAC,EAAKtB,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEK,OAAO,CAAEkB,CAAC,CAACoC,MAAM,CAACF,KAAM,CAAC,CAAE,CAACG,QAAQ,MAAE,CAAC,cAC5J5E,KAAA,UAAOiE,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACnCpE,IAAA,UAAOyE,IAAI,CAAC,UAAU,CAACrD,IAAI,CAAC,aAAa,CAAC6D,OAAO,CAAE/D,QAAQ,CAACM,WAAY,CAACoD,QAAQ,CAAGnC,CAAC,EAAKtB,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEM,WAAW,CAAEiB,CAAC,CAACoC,MAAM,CAACI,OAAQ,CAAC,CAAE,CAAE,CAAC,wCAE3J,EAAO,CAAC,cACRjF,IAAA,WAAQyE,IAAI,CAAC,QAAQ,CAAAL,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EAC5C,CAAC,cACPlE,KAAA,QAAKiE,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC9BpE,IAAA,OAAAoE,QAAA,CAAI,iCAA+B,CAAI,CAAC,cACxClE,KAAA,UAAAkE,QAAA,eACEpE,IAAA,UAAAoE,QAAA,cACElE,KAAA,OAAAkE,QAAA,eACEpE,IAAA,OAAAoE,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BpE,IAAA,OAAAoE,QAAA,CAAI,sBAAoB,CAAI,CAAC,EAC3B,CAAC,CACA,CAAC,cACRlE,KAAA,UAAAkE,QAAA,eACElE,KAAA,OAAAkE,QAAA,eACEpE,IAAA,OAAAoE,QAAA,CAAI,iBAAU,CAAI,CAAC,cACnBpE,IAAA,OAAImE,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,2CAAyC,CAAI,CAAC,EAC5E,CAAC,cACLlE,KAAA,OAAAkE,QAAA,eACEpE,IAAA,OAAAoE,QAAA,CAAI,iBAAU,CAAI,CAAC,cACnBpE,IAAA,OAAAoE,QAAA,CAAI,OAAK,CAAI,CAAC,EACZ,CAAC,cACLlE,KAAA,OAAAkE,QAAA,eACEpE,IAAA,OAAAoE,QAAA,CAAI,iBAAU,CAAI,CAAC,cACnBpE,IAAA,OAAAoE,QAAA,CAAI,OAAK,CAAI,CAAC,EACZ,CAAC,cACLlE,KAAA,OAAAkE,QAAA,eACEpE,IAAA,OAAAoE,QAAA,CAAI,oBAAa,CAAI,CAAC,cACtBpE,IAAA,OAAImE,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAC,sCAAoC,CAAI,CAAC,EAC3E,CAAC,EACA,CAAC,EACH,CAAC,EACL,CAAC,cAGJlE,KAAA,QAAKiE,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpE,IAAA,WAAQmE,SAAS,CAAC,iBAAiB,CAACE,OAAO,CAAEA,CAAA,GAAMtD,WAAW,CAAC,CAACD,QAAQ,CAAE,CAAAsD,QAAA,CACvEtD,QAAQ,CAAG,YAAY,CAAG,WAAW,CAChC,CAAC,CACRA,QAAQ,eAAId,IAAA,CAACF,OAAO,GAAE,CAAC,EACrB,CAAC,EACH,CAAC,EACH,CAAC,cAGNI,KAAA,QAAKiE,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBpE,IAAA,OAAAoE,QAAA,CAAI,iCAAqB,CAAI,CAAC,cAC9BpE,IAAA,UAAOyE,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,YAAY,CAACE,QAAQ,CAAGnC,CAAC,EAAKlC,aAAa,CAACkC,CAAC,CAACoC,MAAM,CAACF,KAAK,CAAE,CAAE,CAAC,cAC9F3E,IAAA,WAAQ4E,QAAQ,CAAGnC,CAAC,EAAKhC,kBAAkB,CAACgC,CAAC,CAACoC,MAAM,CAACF,KAAK,CAAE,CAAAP,QAAA,CACzDR,iBAAiB,CAACT,GAAG,CAAE6B,KAAK,eAC3BhF,IAAA,WAAoB2E,KAAK,CAAEK,KAAM,CAAAZ,QAAA,CAAEY,KAAK,EAA3BA,KAAoC,CAClD,CAAC,CACI,CAAC,cAEThF,IAAA,QAAKmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CACxBN,cAAc,CAACX,GAAG,CAAEhB,KAAK,eACxBjC,KAAA,QAAKiE,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlE,KAAA,MAAAkE,QAAA,EAAG,eAAG,CAACjC,KAAK,CAACb,IAAI,CAAC,kBAAM,CAACa,KAAK,CAACd,SAAS,CAAC,kBAAM,CAACc,KAAK,CAACZ,OAAO,CAAC,kBAAM,CAACY,KAAK,CAACf,IAAI,CAAC,GAAC,CAACe,KAAK,CAACX,WAAW,EAAI,IAAI,EAAI,CAAC,cAEhHxB,IAAA,WAAQmE,SAAS,CAAE,oBAAoBnD,iBAAiB,CAACmB,KAAK,CAACC,GAAG,CAAC,CAAG,WAAW,CAAG,aAAa,EAAG,CAACiC,OAAO,CAAEA,CAAA,GAAMjB,wBAAwB,CAACjB,KAAK,CAACC,GAAG,CAAE,CAAAgC,QAAA,CACrJpD,iBAAiB,CAACmB,KAAK,CAACC,GAAG,CAAC,CAAG,WAAW,CAAG,aAAa,CACrD,CAAC,cAETpC,IAAA,WAAQmE,SAAS,CAAE,aAAa,EAAIhC,KAAK,CAAC+C,OAAO,CAAG,SAAS,CAAG,EAAE,CAAE,CAACb,OAAO,CAAEA,CAAA,GAAMzB,iBAAiB,CAACT,KAAK,CAACC,GAAG,CAAE,CAAC+C,QAAQ,CAAEhD,KAAK,CAAC+C,OAAQ,CAAAd,QAAA,CACvIjC,KAAK,CAAC+C,OAAO,CAAG,SAAS,CAAG,YAAY,CACnC,CAAC,GATsB/C,KAAK,CAACC,GAUlC,CACN,CAAC,CACC,CAAC,EACH,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}