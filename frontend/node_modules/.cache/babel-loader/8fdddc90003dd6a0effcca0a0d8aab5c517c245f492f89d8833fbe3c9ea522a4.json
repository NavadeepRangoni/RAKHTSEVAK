{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navad\\\\blood-donor-backend\\\\frontend\\\\src\\\\components\\\\ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\"); // ‚úÖ Adjust backend URL if needed\n\nconst ChatComponent = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"message\", msg => {\n      setMessages(prev => [...prev, msg]);\n    });\n    return () => socket.off(\"message\");\n  }, []);\n  const sendMessage = () => {\n    if (message.trim()) {\n      socket.emit(\"message\", message);\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Live Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"200px\",\n        overflowY: \"scroll\",\n        border: \"1px solid gray\",\n        padding: \"10px\"\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDDE8\\uFE0F \", msg]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"r7oSiqxTwlZ7iaM02ZQHmIPeE1o=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","ChatComponent","_s","message","setMessage","messages","setMessages","on","msg","prev","off","sendMessage","trim","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","overflowY","border","padding","map","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/navad/blood-donor-backend/frontend/src/components/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:5000\"); // ‚úÖ Adjust backend URL if needed\r\n\r\nconst ChatComponent = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (msg) => {\r\n      setMessages((prev) => [...prev, msg]);\r\n    });\r\n\r\n    return () => socket.off(\"message\");\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim()) {\r\n      socket.emit(\"message\", message);\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Live Chat</h4>\r\n      <div style={{ height: \"200px\", overflowY: \"scroll\", border: \"1px solid gray\", padding: \"10px\" }}>\r\n        {messages.map((msg, index) => (\r\n          <p key={index}>üó®Ô∏è {msg}</p>\r\n        ))}\r\n      </div>\r\n      <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type a message...\" />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAE5C,MAAMI,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdI,MAAM,CAACO,EAAE,CAAC,SAAS,EAAGC,GAAG,IAAK;MAC5BF,WAAW,CAAEG,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,GAAG,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,OAAO,MAAMR,MAAM,CAACU,GAAG,CAAC,SAAS,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIR,OAAO,CAACS,IAAI,CAAC,CAAC,EAAE;MAClBZ,MAAM,CAACa,IAAI,CAAC,SAAS,EAAEV,OAAO,CAAC;MAC/BC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEL,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnB,OAAA;MAAKoB,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,SAAS,EAAE,QAAQ;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAT,QAAA,EAC7FT,QAAQ,CAACmB,GAAG,CAAC,CAAChB,GAAG,EAAEiB,KAAK,kBACvB1B,OAAA;QAAAe,QAAA,GAAe,qBAAI,EAACN,GAAG;MAAA,GAAfiB,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnB,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAExB,OAAQ;MAACyB,QAAQ,EAAGC,CAAC,IAAKzB,UAAU,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAmB;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClHnB,OAAA;MAAQiC,OAAO,EAAErB,WAAY;MAAAG,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAChB,EAAA,CA/BID,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}