{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navad\\\\blood-donor-backend\\\\frontend\\\\src\\\\pages\\\\DonorForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DonorForm = ({\n  onDonorAdded\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    bloodType: \"O+\",\n    plasmaDonor: false,\n    // ✅ New Field for Plasma Donation\n    city: \"\",\n    contact: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Error Display\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === \"checkbox\" ? checked : value // ✅ Handle checkbox state\n    });\n    setErrorMessage(\"\"); // Clear error on change\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Form Data Before Sending:\", formData); // Debugging\n\n    if (!formData.name || !formData.bloodType || !formData.city || !formData.contact) {\n      setErrorMessage(\"❌ All fields are required.\");\n      return;\n    }\n    if (!/^\\d{10,}$/.test(formData.contact)) {\n      setErrorMessage(\"❌ Contact number must be at least 10 digits.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/donors\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      console.log(\"Response Status:\", response.status); // Debugging\n      const data = await response.json();\n      console.log(\"Response Data:\", data); // Debugging\n\n      if (response.ok) {\n        alert(\"✅ Donor added successfully!\");\n        setFormData({\n          name: \"\",\n          bloodType: \"O+\",\n          isPlasmaDonor: false,\n          city: \"\",\n          contact: \"\"\n        }); // ✅ Reset Form\n        setErrorMessage(\"\");\n        if (onDonorAdded) {\n          onDonorAdded(); // ✅ Refresh Donor List\n        }\n      } else {\n        setErrorMessage(`❌ Failed to add donor: ${data.message || \"Unknown error\"}`);\n      }\n    } catch (error) {\n      console.error(\"❌ Error submitting form:\", error);\n      setErrorMessage(\"❌ Error adding donor. Ensure the backend is running and CORS is enabled.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Become a Blood Donor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Full Name\",\n      value: formData.name,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"bloodType\",\n      value: formData.bloodType,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"O+\",\n        children: \"O+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"A+\",\n        children: \"A+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"B+\",\n        children: \"B+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"AB+\",\n        children: \"AB+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      placeholder: \"City\",\n      value: formData.city,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"contact\",\n      placeholder: \"Contact Number\",\n      value: formData.contact,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"PlasmaDonor\",\n        checked: formData.isPlasmaDonor,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), \"Register as Plasma Donor\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(DonorForm, \"Mg2DWfgg8VNExseexUEXKhzDfRQ=\");\n_c = DonorForm;\nexport default DonorForm;\nvar _c;\n$RefreshReg$(_c, \"DonorForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DonorForm","onDonorAdded","_s","formData","setFormData","name","bloodType","plasmaDonor","city","contact","errorMessage","setErrorMessage","handleChange","e","value","type","checked","target","handleSubmit","preventDefault","console","log","test","response","fetch","method","headers","body","JSON","stringify","status","data","json","ok","alert","isPlasmaDonor","message","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/navad/blood-donor-backend/frontend/src/pages/DonorForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst DonorForm = ({ onDonorAdded }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    bloodType: \"O+\",\r\n    plasmaDonor: false, // ✅ New Field for Plasma Donation\r\n    city: \"\",\r\n    contact: \"\",\r\n  });\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Error Display\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === \"checkbox\" ? checked : value, // ✅ Handle checkbox state\r\n    });\r\n    setErrorMessage(\"\"); // Clear error on change\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"Form Data Before Sending:\", formData); // Debugging\r\n\r\n    if (!formData.name || !formData.bloodType || !formData.city || !formData.contact) {\r\n      setErrorMessage(\"❌ All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    if (!/^\\d{10,}$/.test(formData.contact)) {\r\n      setErrorMessage(\"❌ Contact number must be at least 10 digits.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/donors\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      console.log(\"Response Status:\", response.status); // Debugging\r\n      const data = await response.json();\r\n      console.log(\"Response Data:\", data); // Debugging\r\n\r\n      if (response.ok) {\r\n        alert(\"✅ Donor added successfully!\");\r\n        setFormData({ name: \"\", bloodType: \"O+\", isPlasmaDonor: false, city: \"\", contact: \"\" }); // ✅ Reset Form\r\n        setErrorMessage(\"\");\r\n\r\n        if (onDonorAdded) {\r\n          onDonorAdded(); // ✅ Refresh Donor List\r\n        }\r\n      } else {\r\n        setErrorMessage(`❌ Failed to add donor: ${data.message || \"Unknown error\"}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error submitting form:\", error);\r\n      setErrorMessage(\"❌ Error adding donor. Ensure the backend is running and CORS is enabled.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Become a Blood Donor</h3>\r\n\r\n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>} {/* ✅ Show error message */}\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Full Name\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <select name=\"bloodType\" value={formData.bloodType} onChange={handleChange}>\r\n        <option value=\"O+\">O+</option>\r\n        <option value=\"A+\">A+</option>\r\n        <option value=\"B+\">B+</option>\r\n        <option value=\"AB+\">AB+</option>\r\n      </select>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"city\"\r\n        placeholder=\"City\"\r\n        value={formData.city}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"contact\"\r\n        placeholder=\"Contact Number\"\r\n        value={formData.contact}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      {/* ✅ Plasma Donor Checkbox */}\r\n      <label>\r\n        <input type=\"checkbox\" name=\"PlasmaDonor\" checked={formData.isPlasmaDonor} onChange={handleChange} />\r\n        Register as Plasma Donor\r\n      </label>\r\n\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DonorForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}