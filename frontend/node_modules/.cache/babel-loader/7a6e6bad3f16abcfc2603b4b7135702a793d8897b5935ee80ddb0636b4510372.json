{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DonorForm=_ref=>{let{onDonorAdded}=_ref;const[formData,setFormData]=useState({name:\"\",bloodType:\"O+\",plasmaDonor:false,// ‚úÖ New Field for Plasma Donation\ncity:\"\",contact:\"\"});const[errorMessage,setErrorMessage]=useState(\"\");// Error Display\nconst handleChange=e=>{const{name,value,type,checked}=e.target;setFormData({...formData,[name]:type===\"checkbox\"?checked:value// ‚úÖ Handle checkbox state\n});setErrorMessage(\"\");// Clear error on change\n};const handleSubmit=async e=>{e.preventDefault();console.log(\"Form Data Before Sending:\",formData);// Debugging\nif(!formData.name||!formData.bloodType||!formData.city||!formData.contact){setErrorMessage(\"‚ùå All fields are required.\");return;}if(!/^\\d{10,}$/.test(formData.contact)){setErrorMessage(\"‚ùå Contact number must be at least 10 digits.\");return;}try{const response=await fetch(`${import.meta.env.VITE_REACT_APP_BACKEND_BASEURL}/api/donors`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(formData)});console.log(\"Response Status:\",response.status);// Debugging\nconst data=await response.json();console.log(\"Response Data:\",data);// Debugging\nif(response.ok){alert(\"‚úÖ Donor added successfully!\");setFormData({name:\"\",bloodType:\"O+\",isPlasmaDonor:false,city:\"\",contact:\"\"});// ‚úÖ Reset Form\nsetErrorMessage(\"\");if(onDonorAdded){onDonorAdded();// ‚úÖ Refresh Donor List\n}}else{setErrorMessage(`‚ùå Failed to add donor: ${data.message||\"Unknown error\"}`);}}catch(error){console.error(\"‚ùå Error submitting form:\",error);setErrorMessage(\"‚ùå Error adding donor. Ensure the backend is running and CORS is enabled.\");}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Become a Blood Donor\"}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:errorMessage}),\" \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",placeholder:\"Full Name\",value:formData.name,onChange:handleChange,required:true}),/*#__PURE__*/_jsxs(\"select\",{name:\"bloodType\",value:formData.bloodType,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"O+\",children:\"O+\"}),/*#__PURE__*/_jsx(\"option\",{value:\"A+\",children:\"A+\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B+\",children:\"B+\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AB+\",children:\"AB+\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"city\",placeholder:\"City\",value:formData.city,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"contact\",placeholder:\"Contact Number\",value:formData.contact,onChange:handleChange,required:true}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"plasmaDonor\",checked:formData.plasmaDonor,onChange:handleChange}),\"\\uD83E\\uDDEC Register as Plasma Donor\"]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]});};export default DonorForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","DonorForm","_ref","onDonorAdded","formData","setFormData","name","bloodType","plasmaDonor","city","contact","errorMessage","setErrorMessage","handleChange","e","value","type","checked","target","handleSubmit","preventDefault","console","log","test","response","fetch","import","meta","env","VITE_REACT_APP_BACKEND_BASEURL","method","headers","body","JSON","stringify","status","data","json","ok","alert","isPlasmaDonor","message","error","onSubmit","children","style","color","placeholder","onChange","required"],"sources":["C:/Users/navad/Documents/GitHub/RAKHTSEVAK/frontend/src/pages/DonorForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst DonorForm = ({ onDonorAdded }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    bloodType: \"O+\",\r\n    plasmaDonor: false, // ‚úÖ New Field for Plasma Donation\r\n    city: \"\",\r\n    contact: \"\",\r\n  });\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Error Display\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === \"checkbox\" ? checked : value, // ‚úÖ Handle checkbox state\r\n    });\r\n    setErrorMessage(\"\"); // Clear error on change\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"Form Data Before Sending:\", formData); // Debugging\r\n\r\n    if (!formData.name || !formData.bloodType || !formData.city || !formData.contact) {\r\n      setErrorMessage(\"‚ùå All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    if (!/^\\d{10,}$/.test(formData.contact)) {\r\n      setErrorMessage(\"‚ùå Contact number must be at least 10 digits.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${import.meta.env.VITE_REACT_APP_BACKEND_BASEURL}/api/donors`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      console.log(\"Response Status:\", response.status); // Debugging\r\n      const data = await response.json();\r\n      console.log(\"Response Data:\", data); // Debugging\r\n\r\n      if (response.ok) {\r\n        alert(\"‚úÖ Donor added successfully!\");\r\n        setFormData({ name: \"\", bloodType: \"O+\", isPlasmaDonor: false, city: \"\", contact: \"\" }); // ‚úÖ Reset Form\r\n        setErrorMessage(\"\");\r\n\r\n        if (onDonorAdded) {\r\n          onDonorAdded(); // ‚úÖ Refresh Donor List\r\n        }\r\n      } else {\r\n        setErrorMessage(`‚ùå Failed to add donor: ${data.message || \"Unknown error\"}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"‚ùå Error submitting form:\", error);\r\n      setErrorMessage(\"‚ùå Error adding donor. Ensure the backend is running and CORS is enabled.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Become a Blood Donor</h3>\r\n\r\n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>} {/* ‚úÖ Show error message */}\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Full Name\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <select name=\"bloodType\" value={formData.bloodType} onChange={handleChange}>\r\n        <option value=\"O+\">O+</option>\r\n        <option value=\"A+\">A+</option>\r\n        <option value=\"B+\">B+</option>\r\n        <option value=\"AB+\">AB+</option>\r\n      </select>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"city\"\r\n        placeholder=\"City\"\r\n        value={formData.city}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"contact\"\r\n        placeholder=\"Contact Number\"\r\n        value={formData.contact}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      {/* ‚úÖ Plasma Donor Checkbox */}\r\n      <label>\r\n        <input type=\"checkbox\" name=\"plasmaDonor\" checked={formData.plasmaDonor} onChange={handleChange} />\r\n        üß¨ Register as Plasma Donor\r\n      </label>\r\n\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DonorForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}