{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navad\\\\blood-donor-backend\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DonorList from \"../components/DonorList\";\nimport Chatbot from \"../components/Chatbot\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [donors, setDonors] = useState([]);\n  const [searchCity, setSearchCity] = useState(\"\");\n  const [searchBloodType, setSearchBloodType] = useState(\"All\");\n  const [searchPlasma, setSearchPlasma] = useState(false); // Toggle between Blood and Plasma donors\n  const [currentPage, setCurrentPage] = useState(0);\n  const [chatOpen, setChatOpen] = useState(false);\n  const [donorAvailability, setDonorAvailability] = useState({});\n  const [newDonor, setNewDonor] = useState({\n    name: \"\",\n    bloodType: \"\",\n    city: \"\",\n    contact: \"\",\n    plasmaDonor: false\n  });\n  useEffect(() => {\n    fetchDonors();\n  }, []);\n  const fetchDonors = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/donors\");\n      setDonors(response.data);\n      const availabilityData = {};\n      response.data.forEach(donor => {\n        availabilityData[donor._id] = donor.available;\n      });\n      setDonorAvailability(availabilityData);\n    } catch (error) {\n      console.error(\"❌ Error fetching donors:\", error);\n    }\n  };\n  const handleRegisterDonor = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/donors\", newDonor);\n      setDonors([...donors, response.data]);\n      setNewDonor({\n        name: \"\",\n        bloodType: \"\",\n        city: \"\",\n        contact: \"\",\n        isPlasmaDonor: false\n      });\n    } catch (error) {\n      console.error(\"❌ Error registering donor:\", error);\n    }\n  };\n  const handleDonateClick = async donorId => {\n    const donationDate = new Date().toISOString();\n    try {\n      const response = await axios.put(`http://localhost:5000/api/donors/${donorId}/donate`, {\n        donationDate\n      });\n      setDonors(prevDonors => prevDonors.map(donor => donor._id === donorId ? response.data : donor));\n    } catch (error) {\n      console.error(\"❌ Error updating donation status:\", error);\n    }\n  };\n  const handleToggleAvailability = async donorId => {\n    const updatedAvailability = !donorAvailability[donorId];\n    setDonorAvailability(prev => ({\n      ...prev,\n      [donorId]: updatedAvailability\n    }));\n    try {\n      await axios.put(`http://localhost:5000/api/donors/${donorId}/availability`, {\n        available: updatedAvailability\n      });\n    } catch (error) {\n      console.error(\"❌ Error updating availability:\", error);\n    }\n  };\n  const isDonationLocked = donationDate => {\n    if (!donationDate) return false;\n    const donationTime = new Date(donationDate).getTime();\n    const currentTime = new Date().getTime();\n    const diffInDays = (currentTime - donationTime) / (1000 * 60 * 60 * 24);\n    return diffInDays < 90;\n  };\n  const bloodGroupOptions = [\"All\", \"A+\", \"A-\", \"B+\", \"B-\", \"AB+\", \"AB-\", \"O+\", \"O-\"];\n  const plasmaGroupOptions = [\"A+\", \"B+\", \"AB+\", \"O+\"]; // Only these are allowed for plasma donations\n\n  const filteredDonors = donors.filter(donor => {\n    const matchesCity = !searchCity || donor.city && donor.city.toLowerCase().includes(searchCity.toLowerCase());\n    if (searchPlasma) {\n      return matchesCity && plasmaGroupOptions.includes(donor.bloodType);\n    } else {\n      return matchesCity && (searchBloodType === \"All\" || donor.bloodType === searchBloodType);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(0),\n        className: currentPage === 0 ? \"active\" : \"\",\n        children: \"Become a Donor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(1),\n        className: currentPage === 1 ? \"active\" : \"\",\n        children: \"Find a Donor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pages\",\n      style: {\n        transform: `translateX(-${currentPage * 100}%)`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83E\\uDE78 Become a Blood Donor \\u2764\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"donor-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"donor-form\",\n            onSubmit: handleRegisterDonor,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Full Name\",\n              value: newDonor.name,\n              onChange: e => setNewDonor({\n                ...newDonor,\n                name: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newDonor.bloodType,\n              onChange: e => setNewDonor({\n                ...newDonor,\n                bloodType: e.target.value\n              }),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Blood Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), bloodGroupOptions.slice(1).map(group => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: group,\n                children: group\n              }, group, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"City\",\n              value: newDonor.city,\n              onChange: e => setNewDonor({\n                ...newDonor,\n                city: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Contact Number\",\n              value: newDonor.contact,\n              onChange: e => setNewDonor({\n                ...newDonor,\n                contact: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: newDonor.plasmaDonor,\n                onChange: e => setNewDonor({\n                  ...newDonor,\n                  plasmaDonor: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), \"Register as Plasma Donor\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Register as Donor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plasma-poster\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \" Plasma Donation Matching Rules\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Donor Blood Group\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Can Donate Plasma To\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"O (O+, O\\u2212)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"universal-donor\",\n                    children: \"ALL blood groups (Universal Plasma Donor)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"A (A+, A\\u2212)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"A, AB\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"B (B+, B\\u2212)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"B, AB\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"AB (AB+, AB\\u2212)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"universal-recipient\",\n                    children: \"AB only (Universal Plasma Recipient)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"chat-toggle-btn\",\n              onClick: () => setChatOpen(!chatOpen),\n              children: chatOpen ? \"Close Chat\" : \"Open Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), chatOpen && /*#__PURE__*/_jsxDEV(Chatbot, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDD0D Find a Blood Donor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter City\",\n          onChange: e => setSearchCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setSearchBloodType(e.target.value),\n          children: bloodGroupOptions.map(group => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: group,\n            children: group\n          }, group, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"donor-list\",\n          children: filteredDonors.map(donor => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"donor-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uD83D\\uDCCD \", donor.city, \" | \\uD83E\\uDE78 \", donor.bloodType, \" | \\uD83D\\uDCDE \", donor.contact, \" | \\uD83D\\uDC64 \", donor.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `availability-btn ${donorAvailability[donor._id] ? \"available\" : \"unavailable\"}`,\n              onClick: () => handleToggleAvailability(donor._id),\n              children: donorAvailability[donor._id] ? \"Available\" : \"Unavailable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"donate-btn \" + (donor.donated ? \"donated\" : \"\"),\n              onClick: () => handleDonateClick(donor._id),\n              disabled: donor.donated,\n              children: donor.donated ? \"Donated\" : \"Donate Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, donor._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"2RQKSLs8OLxUe3FpcgfCXxezDF4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","DonorList","Chatbot","jsxDEV","_jsxDEV","Dashboard","_s","donors","setDonors","searchCity","setSearchCity","searchBloodType","setSearchBloodType","searchPlasma","setSearchPlasma","currentPage","setCurrentPage","chatOpen","setChatOpen","donorAvailability","setDonorAvailability","newDonor","setNewDonor","name","bloodType","city","contact","plasmaDonor","fetchDonors","response","get","data","availabilityData","forEach","donor","_id","available","error","console","handleRegisterDonor","e","preventDefault","post","isPlasmaDonor","handleDonateClick","donorId","donationDate","Date","toISOString","put","prevDonors","map","handleToggleAvailability","updatedAvailability","prev","isDonationLocked","donationTime","getTime","currentTime","diffInDays","bloodGroupOptions","plasmaGroupOptions","filteredDonors","filter","matchesCity","toLowerCase","includes","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","onSubmit","type","placeholder","value","onChange","target","required","slice","group","checked","donated","disabled","_c","$RefreshReg$"],"sources":["C:/Users/navad/blood-donor-backend/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport DonorList from \"../components/DonorList\";\r\nimport Chatbot from \"../components/Chatbot\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const [donors, setDonors] = useState([]);\r\n  const [searchCity, setSearchCity] = useState(\"\");\r\n  const [searchBloodType, setSearchBloodType] = useState(\"All\");\r\n  const [searchPlasma, setSearchPlasma] = useState(false); // Toggle between Blood and Plasma donors\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [chatOpen, setChatOpen] = useState(false);\r\n  const [donorAvailability, setDonorAvailability] = useState({});\r\n  const [newDonor, setNewDonor] = useState({\r\n    name: \"\",\r\n    bloodType: \"\",\r\n    city: \"\",\r\n    contact: \"\",\r\n    plasmaDonor: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchDonors();\r\n  }, []);\r\n\r\n  const fetchDonors = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/donors\");\r\n      setDonors(response.data);\r\n\r\n      const availabilityData = {};\r\n      response.data.forEach((donor) => {\r\n        availabilityData[donor._id] = donor.available;\r\n      });\r\n      setDonorAvailability(availabilityData);\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching donors:\", error);\r\n    }\r\n  };\r\n\r\n  const handleRegisterDonor = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/donors\", newDonor);\r\n      setDonors([...donors, response.data]); \r\n      setNewDonor({ name: \"\", bloodType: \"\", city: \"\", contact: \"\",isPlasmaDonor: false });\r\n    } catch (error) {\r\n      console.error(\"❌ Error registering donor:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDonateClick = async (donorId) => {\r\n    const donationDate = new Date().toISOString();\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:5000/api/donors/${donorId}/donate`, {\r\n        donationDate,\r\n      });\r\n\r\n      setDonors((prevDonors) =>\r\n        prevDonors.map((donor) =>\r\n          donor._id === donorId ? response.data : donor\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"❌ Error updating donation status:\", error);\r\n    }\r\n  };\r\n\r\n  const handleToggleAvailability = async (donorId) => {\r\n    const updatedAvailability = !donorAvailability[donorId];\r\n\r\n    setDonorAvailability((prev) => ({\r\n      ...prev,\r\n      [donorId]: updatedAvailability,\r\n    }));\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/donors/${donorId}/availability`, {\r\n        available: updatedAvailability,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"❌ Error updating availability:\", error);\r\n    }\r\n  };\r\n\r\n  const isDonationLocked = (donationDate) => {\r\n    if (!donationDate) return false;\r\n    const donationTime = new Date(donationDate).getTime();\r\n    const currentTime = new Date().getTime();\r\n    const diffInDays = (currentTime - donationTime) / (1000 * 60 * 60 * 24);\r\n    return diffInDays < 90;\r\n  };\r\n\r\n  const bloodGroupOptions = [\"All\", \"A+\", \"A-\", \"B+\", \"B-\", \"AB+\", \"AB-\", \"O+\", \"O-\"];\r\n  const plasmaGroupOptions = [\"A+\", \"B+\", \"AB+\", \"O+\"]; // Only these are allowed for plasma donations\r\n\r\n  const filteredDonors = donors.filter((donor) => {\r\n    const matchesCity = !searchCity || (donor.city && donor.city.toLowerCase().includes(searchCity.toLowerCase()));\r\n\r\n    if (searchPlasma) {\r\n      return matchesCity && plasmaGroupOptions.includes(donor.bloodType);\r\n    } else {\r\n      return matchesCity && (searchBloodType === \"All\" || donor.bloodType === searchBloodType);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"page-switch\">\r\n        <button onClick={() => setCurrentPage(0)} className={currentPage === 0 ? \"active\" : \"\"}>\r\n          Become a Donor\r\n        </button>\r\n        <button onClick={() => setCurrentPage(1)} className={currentPage === 1 ? \"active\" : \"\"}>\r\n          Find a Donor\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"pages\" style={{ transform: `translateX(-${currentPage * 100}%)` }}>\r\n        {/* Page 1 - Become a Donor */}\r\n        <div className=\"page\">\r\n          <h2>🩸 Become a Blood Donor ❤️</h2>\r\n\r\n          <div className=\"donor-section\">\r\n            <form className=\"donor-form\" onSubmit={handleRegisterDonor}>\r\n              <input type=\"text\" placeholder=\"Full Name\" value={newDonor.name} onChange={(e) => setNewDonor({ ...newDonor, name: e.target.value })} required />\r\n              <select value={newDonor.bloodType} onChange={(e) => setNewDonor({ ...newDonor, bloodType: e.target.value })} required>\r\n                <option value=\"\">Select Blood Type</option>\r\n                {bloodGroupOptions.slice(1).map((group) => (\r\n                  <option key={group} value={group}>{group}</option>\r\n                ))}\r\n              </select>\r\n              <input type=\"text\" placeholder=\"City\" value={newDonor.city} onChange={(e) => setNewDonor({ ...newDonor, city: e.target.value })} required />\r\n              <input type=\"text\" placeholder=\"Contact Number\" value={newDonor.contact} onChange={(e) => setNewDonor({ ...newDonor, contact: e.target.value })} required />\r\n              <label className=\"checkbox-container\">\r\n                <input type=\"checkbox\" checked={newDonor.plasmaDonor} onChange={(e) => setNewDonor({ ...newDonor, plasmaDonor: e.target.checked })} />\r\n                Register as Plasma Donor\r\n              </label>\r\n              <button type=\"submit\">Register as Donor</button>\r\n            </form>\r\n            <div className=\"plasma-poster\">\r\n            <h3> Plasma Donation Matching Rules</h3>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Donor Blood Group</th>\r\n                  <th>Can Donate Plasma To</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>O (O+, O−)</td>\r\n                  <td className=\"universal-donor\">ALL blood groups (Universal Plasma Donor)</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>A (A+, A−)</td>\r\n                  <td>A, AB</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>B (B+, B−)</td>\r\n                  <td>B, AB</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>AB (AB+, AB−)</td>\r\n                  <td className=\"universal-recipient\">AB only (Universal Plasma Recipient)</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n\r\n            <div className=\"chat-section\">\r\n              <button className=\"chat-toggle-btn\" onClick={() => setChatOpen(!chatOpen)}>\r\n                {chatOpen ? \"Close Chat\" : \"Open Chat\"}\r\n              </button>\r\n              {chatOpen && <Chatbot />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Page 2 - Find a Donor */}\r\n        <div className=\"page\">\r\n          <h3>🔍 Find a Blood Donor</h3>\r\n          <input type=\"text\" placeholder=\"Enter City\" onChange={(e) => setSearchCity(e.target.value)} />\r\n          <select onChange={(e) => setSearchBloodType(e.target.value)}>\r\n            {bloodGroupOptions.map((group) => (\r\n              <option key={group} value={group}>{group}</option>\r\n            ))}\r\n          </select>\r\n\r\n          <div className=\"donor-list\">\r\n            {filteredDonors.map((donor) => (\r\n              <div className=\"donor-card\" key={donor._id}>\r\n                <p>📍 {donor.city} | 🩸 {donor.bloodType} | 📞 {donor.contact} | 👤 {donor.name}</p>\r\n\r\n                <button className={`availability-btn ${donorAvailability[donor._id] ? \"available\" : \"unavailable\"}`} onClick={() => handleToggleAvailability(donor._id)}>\r\n                  {donorAvailability[donor._id] ? \"Available\" : \"Unavailable\"}\r\n                </button>\r\n\r\n                <button className={\"donate-btn \" + (donor.donated ? \"donated\" : \"\")} onClick={() => handleDonateClick(donor._id)} disabled={donor.donated}>\r\n                  {donor.donated ? \"Donated\" : \"Donate Now\"}\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}