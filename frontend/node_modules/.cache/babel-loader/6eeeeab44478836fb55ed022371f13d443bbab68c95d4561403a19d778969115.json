{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navad\\\\blood-donor-backend\\\\frontend\\\\src\\\\components\\\\DonorList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DonorList = () => {\n  _s();\n  const [donors, setDonors] = useState([]);\n  useEffect(() => {\n    const fetchDonors = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/donors\"); // Adjust API URL if needed\n        setDonors(response.data);\n      } catch (error) {\n        console.error(\"Error fetching donors:\", error);\n      }\n    };\n    fetchDonors();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"\\uD83C\\uDFC5 Donor List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: donors.map(donor => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-5 rounded-xl shadow-lg border border-gray-200 transition-transform transform hover:scale-105 hover:shadow-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-gray-800\",\n          children: [\"\\uD83D\\uDC64 \", donor.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"\\uD83E\\uDE78 Blood Type: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold text-red-500\",\n            children: donor.bloodType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"\\uD83D\\uDCCD City: \", donor.city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"\\uD83D\\uDCDE Contact: \", donor.contact]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"\\uD83C\\uDFC6 Donations: \", donor.donationCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), donor.isPlasmaDonor && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"plasma-badge\",\n          children: \"\\uD83D\\uDD25 Plasma Donor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `badge ${getBadgeClass(donor.badge)}`,\n          children: donor.badge\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, donor._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n// Badge Styles\n_s(DonorList, \"6ts35wbLdjhbqnD/+5cy/XrwDPw=\");\n_c = DonorList;\nconst getBadgeClass = badge => {\n  switch (badge) {\n    case \"Gold Donor\":\n      return \"bg-yellow-500 text-white\";\n    case \"Silver Donor\":\n      return \"bg-gray-400 text-white\";\n    case \"Bronze Donor\":\n      return \"bg-orange-500 text-white\";\n    default:\n      return \"bg-blue-500 text-white\";\n  }\n};\nexport default DonorList;\nvar _c;\n$RefreshReg$(_c, \"DonorList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DonorList","_s","donors","setDonors","fetchDonors","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","donor","name","bloodType","city","contact","donationCount","isPlasmaDonor","getBadgeClass","badge","_id","_c","$RefreshReg$"],"sources":["C:/Users/navad/blood-donor-backend/frontend/src/components/DonorList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst DonorList = () => {\r\n  const [donors, setDonors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDonors = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/donors\"); // Adjust API URL if needed\r\n        setDonors(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching donors:\", error);\r\n      }\r\n    };\r\n\r\n    fetchDonors();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">üèÖ Donor List</h2>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {donors.map((donor) => (\r\n          <div\r\n            key={donor._id}\r\n            className=\"bg-white p-5 rounded-xl shadow-lg border border-gray-200 transition-transform transform hover:scale-105 hover:shadow-2xl\"\r\n          >\r\n            <h3 className=\"text-lg font-semibold text-gray-800\">üë§ {donor.name}</h3>\r\n            <p className=\"text-sm text-gray-600\">\r\n              ü©∏ Blood Type: <span className=\"font-bold text-red-500\">{donor.bloodType}</span>\r\n            </p>\r\n            <p className=\"text-sm text-gray-600\">üìç City: {donor.city}</p>\r\n            <p className=\"text-sm text-gray-600\">üìû Contact: {donor.contact}</p>\r\n            <p className=\"text-sm text-gray-600\">üèÜ Donations: {donor.donationCount}</p>\r\n\r\n            {/* ‚úÖ Plasma Donor Badge */}\r\n            {donor.isPlasmaDonor && (\r\n              <span className=\"plasma-badge\">\r\n                üî• Plasma Donor\r\n              </span>\r\n            )}\r\n\r\n            {/* Badge Display */}\r\n            <span className={`badge ${getBadgeClass(donor.badge)}`}>\r\n              {donor.badge}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Badge Styles\r\nconst getBadgeClass = (badge) => {\r\n  switch (badge) {\r\n    case \"Gold Donor\":\r\n      return \"bg-yellow-500 text-white\";\r\n    case \"Silver Donor\":\r\n      return \"bg-gray-400 text-white\";\r\n    case \"Bronze Donor\":\r\n      return \"bg-orange-500 text-white\";\r\n    default:\r\n      return \"bg-blue-500 text-white\";\r\n  }\r\n};\r\n\r\nexport default DonorList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}