{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navad\\\\blood-donor-backend\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { loginUser } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(null);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await loginUser(formData);\n      alert(\"Login successful!\");\n    } catch (err) {\n      setError(\"Invalid credentials. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      placeholder: \"Email\",\n      value: formData.email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: formData.password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"FZimcqobtKQ/ZwLgYZhYn5qrVHQ=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","loginUser","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","error","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","alert","err","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","type","_c","$RefreshReg$"],"sources":["C:/Users/navad/blood-donor-backend/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { loginUser } from \"../services/api\";\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await loginUser(formData);\r\n      alert(\"Login successful!\");\r\n    } catch (err) {\r\n      setError(\"Invalid credentials. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {error && <div>{error}</div>}\r\n      <input\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={formData.email}\r\n        onChange={handleChange}\r\n      />\r\n      <input\r\n        name=\"password\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={formData.password}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACrE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BN,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACO,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMjB,SAAS,CAACK,QAAQ,CAAC;MACzBa,KAAK,CAAC,mBAAmB,CAAC;IAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZT,QAAQ,CAAC,wCAAwC,CAAC;IACpD;EACF,CAAC;EAED,oBACER,OAAA;IAAMkB,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,GAC1BZ,KAAK,iBAAIP,OAAA;MAAAmB,QAAA,EAAMZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5BvB,OAAA;MACEY,IAAI,EAAC,OAAO;MACZY,WAAW,EAAC,OAAO;MACnBX,KAAK,EAAEV,QAAQ,CAACE,KAAM;MACtBoB,QAAQ,EAAEhB;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFvB,OAAA;MACEY,IAAI,EAAC,UAAU;MACfc,IAAI,EAAC,UAAU;MACfF,WAAW,EAAC,UAAU;MACtBX,KAAK,EAAEV,QAAQ,CAACG,QAAS;MACzBmB,QAAQ,EAAEhB;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFvB,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAP,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX,CAAC;AAACrB,EAAA,CArCID,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAuCX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}