{"ast":null,"code":"import axios from\"axios\";const API_URL=\"http://localhost:5000/api\";// Ensure this matches your backend URL\n// Fetch all donor posts\nexport const fetchPosts=async()=>{try{return await axios.get(\"http://localhost:5000/api/users/register\",userdata);}catch(error){var _error$response;console.error(\"❌ Error fetching posts:\",((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);throw error;}};// Register a new user\nexport const registerUser=async userData=>{try{const response=await axios.post(`${API_URL}/users/register`,userData);return response.data;}catch(error){var _error$response2;console.error(\"❌ Registration failed:\",((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error.message);throw error;}};// Login a user\nexport const loginUser=async userData=>{try{const response=await axios.post(`${API_URL}/users/login`,userData);return response.data;}catch(error){var _error$response3;console.error(\"❌ Login failed:\",((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data)||error.message);throw error;}};","map":{"version":3,"names":["axios","API_URL","fetchPosts","get","userdata","error","_error$response","console","response","data","message","registerUser","userData","post","_error$response2","loginUser","_error$response3"],"sources":["C:/Users/navad/blood-donor-backend/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api\"; // Ensure this matches your backend URL\r\n\r\n// Fetch all donor posts\r\nexport const fetchPosts = async () => {\r\n  try {\r\n    return await axios.get(\"http://localhost:5000/api/users/register\",userdata);\r\n  } catch (error) {\r\n    console.error(\"❌ Error fetching posts:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Register a new user\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/users/register`, userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Registration failed:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Login a user\r\nexport const loginUser = async (userData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/users/login`, userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Login failed:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,2BAA2B,CAAE;AAE7C;AACA,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACF,MAAO,MAAM,CAAAF,KAAK,CAACG,GAAG,CAAC,0CAA0C,CAACC,QAAQ,CAAC,CAC7E,CAAE,MAAOC,KAAK,CAAE,KAAAC,eAAA,CACdC,OAAO,CAACF,KAAK,CAAC,yBAAyB,CAAE,EAAAC,eAAA,CAAAD,KAAK,CAACG,QAAQ,UAAAF,eAAA,iBAAdA,eAAA,CAAgBG,IAAI,GAAIJ,KAAK,CAACK,OAAO,CAAC,CAC/E,KAAM,CAAAL,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAM,YAAY,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC9C,GAAI,CACF,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAR,KAAK,CAACa,IAAI,CAAC,GAAGZ,OAAO,iBAAiB,CAAEW,QAAQ,CAAC,CACxE,MAAO,CAAAJ,QAAQ,CAACC,IAAI,CACtB,CAAE,MAAOJ,KAAK,CAAE,KAAAS,gBAAA,CACdP,OAAO,CAACF,KAAK,CAAC,wBAAwB,CAAE,EAAAS,gBAAA,CAAAT,KAAK,CAACG,QAAQ,UAAAM,gBAAA,iBAAdA,gBAAA,CAAgBL,IAAI,GAAIJ,KAAK,CAACK,OAAO,CAAC,CAC9E,KAAM,CAAAL,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,SAAS,CAAG,KAAO,CAAAH,QAAQ,EAAK,CAC3C,GAAI,CACF,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAR,KAAK,CAACa,IAAI,CAAC,GAAGZ,OAAO,cAAc,CAAEW,QAAQ,CAAC,CACrE,MAAO,CAAAJ,QAAQ,CAACC,IAAI,CACtB,CAAE,MAAOJ,KAAK,CAAE,KAAAW,gBAAA,CACdT,OAAO,CAACF,KAAK,CAAC,iBAAiB,CAAE,EAAAW,gBAAA,CAAAX,KAAK,CAACG,QAAQ,UAAAQ,gBAAA,iBAAdA,gBAAA,CAAgBP,IAAI,GAAIJ,KAAK,CAACK,OAAO,CAAC,CACvE,KAAM,CAAAL,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}